
/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]

versions.support_annotation="1.1.0"
versions.support_appcompat="1.0.2"
versions.support_fragment="1.0.0"

versions.support = '1.0.0'
versions.constraint_layout = '1.1.3'
versions.multidex = '2.0.0'
versions.room = '2.1.0-beta01' //TODO: need to remove beta when its release
versions.lifecycle = '2.0.0'

versions.dagger = "2.22.1"



versions.kotlin = "1.3.31"
versions.kotlin_ktx = '1.0.0'
versions.glide = "4.9.0"
versions.gson = "2.8.1"
versions.chunk = "1.1.0"
versions.retrofit = "2.5.0"

versions.timber = "4.5.1"
versions.android_gradle_plugin = '3.4.2'


versions.license_tools_plugin = '1.6.0'
versions.work = '2.0.1'
versions.retrofit_interceptor = '3.9.0'
versions.navigation = '2.0.0'
versions.paging = "2.1.0-rc01"

versions.retrofit_url_manager = '1.4.0'


//Kotlin Coroutines and Retrofit

versions.kotlinx_coroutines_android = '1.0.1'
versions.retrofit2_kotlin_coroutines_adapter = '0.9.2'


def deps = [:]

def support = [:]
support.annotations = "com.android.support:support-annotations:$versions.support_annotation"
support.appcompat = "androidx.appcompat:appcompat:$versions.support_appcompat"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:$versions.support"

support.fragment = "androidx.fragment:fragment:$versions.support_fragment"
support.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
support.multidex = "androidx.multidex:multidex:$versions.multidex"
support.flexbox = "com.google.android:flexbox:$versions.flex_box"
deps.support = support

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.ktx = "androidx.room:room-ktx:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
deps.lifecycle = lifecycle

def work = [:]
work.runtime = "androidx.work:work-runtime:$versions.work"
work.testing = "androidx.work:work-testing:$versions.work"

work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
deps.work = work

def navigation = [:]
navigation.navigation_ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.safe_args = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation
ext.deps = deps

def paging = [:]
paging.runtime = "androidx.paging:paging-runtime:$versions.paging"

deps.paging = paging

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"

deps.dagger = dagger

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.retrofit_interceptor"

retrofit.retrofit2_kotlin_coroutines_adapter = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.retrofit2_kotlin_coroutines_adapter"
deps.retrofit = retrofit


def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.ktx = "androidx.core:core-ktx:$versions.kotlin_ktx"
kotlin.ktx_fragment = "androidx.fragment:fragment-ktx:$versions.kotlin_ktx"
deps.kotlin = kotlin

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
glide.okhttp3 = "com.github.bumptech.glide:okhttp3-integration:$versions.glide"
deps.glide = glide

def chunk =  [:]
chunk.runtime = "com.readystatesoftware.chuck:library:$versions.chunk"
chunk.runtime_no_op = "com.readystatesoftware.chuck:library-no-op:$versions.chunk"
deps.chunk = chunk

deps.gson = "com.google.code.gson:gson:$versions.gson"
deps.map_utils = "com.google.maps.android:android-maps-utils:$versions.map_utils"

deps.timber = "com.jakewharton.timber:timber:$versions.timber"

deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
//Gradle plugin to check library licenses and generate license pages. https://github.com/cookpad/license-tools-plugin
deps.license_tool_plugin = "com.cookpad.android.licensetools:license-tools-plugin:$versions.license_tools_plugin"

//Kotlin Coroutines and Retrofit
deps.kotlinx_coroutines_android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinx_coroutines_android"


ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()

    handler.maven { url 'https://maven.google.com' }
    handler.mavenCentral()

}
ext.addRepos = this.&addRepos
